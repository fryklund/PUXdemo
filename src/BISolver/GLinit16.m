function [T,W,D,L,M]=GLinit16
%[T,W,D,L,M]=GLinit16
%Returns 16-point Gauss-Legendre nodes and weights (T and W) as well as 
%a couple of convenient matrices if requested. Suppose that a function f(x)
%is evaluated at the nodes T and put in a vector f. Then,
%D*f - computes the derivative of f with respect to parameter
%L*f - computes the Legendre coefficients of f
%M*f - computes the primitive function of f

% 16-point Gauss-Legendre nodes.
T = zeros(16,1);
T(1) = -.9894009349916499325961541734503326274262740716576451300512239046;
T(2) = -.9445750230732325760779884155346083450911392725910726009255536520;
T(3) = -.8656312023878317438804678977123931323873353848475267081035114260;
T(4) = -.7554044083550030338951011948474422683538136564575030097817571766;
T(5) = -.6178762444026437484466717640487910189918822177656577941037973557;
T(6) = -.4580167776572273863424194429835775735400316130355234909011547510;
T(7) = -.2816035507792589132304605014604961064860694907705998005488347352;
T(8) = -.9501250983763744018531933542495806313035305568906545669721981839e-1;
T(9) = .9501250983763744018531933542495806313035305568906545669721981938e-1;
T(10) = .2816035507792589132304605014604961064860694907705998005488347320;
T(11) = .4580167776572273863424194429835775735400316130355234909011547521;
T(12) = .6178762444026437484466717640487910189918822177656577941037973538;
T(13) = .7554044083550030338951011948474422683538136564575030097817571790;
T(14) = .8656312023878317438804678977123931323873353848475267081035114256;
T(15) = .9445750230732325760779884155346083450911392725910726009255536505;
T(16) = .9894009349916499325961541734503326274262740716576451300512239063;

if nargout == 1
    return
end

% 16-point Gauss-Legendre weights.
W = zeros(16,1);
W(1) = .2715245941175409485178057245601810351226737556676079799061031884e-1;
W(2) = .6225352393864789286284383699437769427498650835290685790130351668e-1;
W(3) = .9515851168249278480992510760224622635526350318371265815682228664e-1;
W(4) = .1246289712555338720524762821920164201448868592222026799447505902;
W(5) = .1495959888165767320815017305474785489704910682078364668054219629;
W(6) = .1691565193950025381893120790303599622116394734160282817450829354;
W(7) = .1826034150449235888667636679692199393835562236546492824184951438;
W(8) = .1894506104550684962853967232082831051469089883959029750375132466;
W(9) = .1894506104550684962853967232082831051469089883959029750375132423;
W(10) = .1826034150449235888667636679692199393835562236546492824184951492;
W(11) = .1691565193950025381893120790303599622116394734160282817450829410;
W(12) = .1495959888165767320815017305474785489704910682078364668054219563;
W(13) = .1246289712555338720524762821920164201448868592222026799447505887;
W(14) = .9515851168249278480992510760224622635526350318371265815682229004e-1;
W(15) = .6225352393864789286284383699437769427498650835290685790130351470e-1;
W(16) = .2715245941175409485178057245601810351226737556676079799061031716e-1;

if nargout == 2
    return
end

% D - Matrix for computing the derivative of a function evaluated at T with
%     respect to parameter

D = D16init;

if nargout == 3
    return
end


% L - Matrix for computing the coefficients of the Legendre polynomial
%     of a function f evaluated at T via L*f

L = load('LMat16');
L = L.L;

if nargout == 4
    return
end

% M - Matrix for computing the primitive function of a function f evaluated
%     at T with respect to parameter.

M = load('Cumint16');
M = M.M;